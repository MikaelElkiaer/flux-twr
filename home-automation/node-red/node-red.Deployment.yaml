apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: node-red
  name: node-red
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: node-red
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-red
    spec:
      containers:
        - name: node-red
          image: docker.io/nodered/node-red:4.1.0@sha256:da6ac47cce14ed8df7ceddc8a15c8f4c0a41e0836c4d6e68e7a6a82329305a6b
          env:
            - name: TZ
              value: Europe/Copenhagen
          ports:
            - name: http
              containerPort: 1880
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            exec:
              command: ["node", "/healthcheck.js"]
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["node", "/healthcheck.js"]
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            exec:
              command: ["node", "/healthcheck.js"]
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: node-red-data
